// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum ResumeStatus {
  active
  archived
  deleted
}

enum ResumeState {
  not_opened
  recently_viewed
  frequently_accessed
  multi_device_viewed
  cloud_accessed
  expired
}

enum TrackingSource {
  pixel
  link
  direct
}

enum EventType {
  view
  download
  share
  state_change
}

model Resume {
  id                String        @id @default(uuid())
  job_title         String        @db.VarChar(255)
  company           Json
  job_listing_url   String?       @db.Text
  status           ResumeStatus  @default(active)
  state            ResumeState   @default(not_opened)
  viewCount        Int          @default(0)
  uniqueLocations  Int          @default(0)
  deviceAccessCount Int          @default(0)
  cloudAccessCount  Int          @default(0)
  avgViewDuration   Int          @default(0)
  lastAccessedAt    DateTime?
  createdAt        DateTime     @default(now())
  updatedAt        DateTime     @updatedAt
  trackingLogs     TrackingLog[]
  events           Event[]

  @@index([status, state])
  @@index([createdAt])
  @@index([lastAccessedAt])
}

model TrackingLog {
  id             String         @id @default(uuid())
  resumeId       String
  resume         Resume         @relation(fields: [resumeId], references: [id], onDelete: Cascade)
  ip_address     String         @db.VarChar(45)
  user_agent     String         @db.Text
  deviceType     String         @db.VarChar(50)
  isCloudService Boolean        @default(false)
  source         TrackingSource @default(direct)
  location       String?        @db.VarChar(100)
  metadata       Json?
  createdAt      DateTime       @default(now())

  @@index([resumeId, createdAt])
  @@index([deviceType])
  @@index([source])
}

model Event {
  id        String    @id @default(uuid())
  resumeId  String
  resume    Resume    @relation(fields: [resumeId], references: [id], onDelete: Cascade)
  type      EventType
  metadata  Json?
  createdAt DateTime  @default(now())

  @@index([resumeId, type, createdAt])
  @@index([createdAt])
} 